% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{search_in_if_args}
\alias{search_in_if_args}
\title{Search in data frame column if search term is not \code{NULL}}
\usage{
search_in_if_args(df, dfcol, search, args = NULL, multiple = FALSE)
}
\arguments{
\item{df}{A \verb{<data.frame>} or \verb{<tibble>}}

\item{dfcol}{A \verb{<character>} or \verb{<symbol>} specifying the column to search in}

\item{search}{A \verb{<character>} or \verb{<symbol>} specifying the search term}

\item{args}{A \verb{<character>} vector of argument options; default is \code{NULL}}

\item{multiple}{A \verb{<logical>} indicating if multiple \code{search} args are
allowed; default is \code{FALSE}}
}
\value{
A \verb{<data.frame>} or \verb{<tibble>}
}
\description{
Search in data frame column if search term is not \code{NULL}
}
\examples{
x <- dplyr::tibble(y = 1:10, z = letters[1:10])

search_in_if_args(df = x, dfcol = x$z, search = c("a", "j"))

search_in_if_args(df = x, dfcol = x$z, search = NULL)

search_in_if_args(df = x,
                  dfcol = x$z,
                  search = c("a", "j"),
                  args = c("a", "j"),
                  multiple = TRUE)

try(search_in_if_args(df = x,
                      dfcol = x$z,
                      search = c("a", "j"),
                      args = c("a", "z"),
                      multiple = FALSE))

}
